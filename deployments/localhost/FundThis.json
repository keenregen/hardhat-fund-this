{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotDeployer",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc53db3be6eeccf17875eab589b08388b1fb7ff130a474e9190f2e8311bbc25f3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "787096",
    "logsBloom": "0x
    "blockHash": "0x3620a2ca77c049fa7a5fbedc4b33cf70a8676e548f9ea7c2985a59baa40f6ac7",
    "transactionHash": "0xc53db3be6eeccf17875eab589b08388b1fb7ff130a474e9190f2e8311bbc25f3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "787096",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c6ec4237f8724798575d4cdbdfa98fed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotDeployer\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundThis.sol\":\"FundThis\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundThis.sol\":{\"content\":\"// get funds from blch users\\n// set a min funding value in usd\\n// keep funder addresses and fund amounts\\n// withdraw funds\\n\\n// v3 with gas efficiency techniques, receive and fallback additions\\n\\n// SPDX-License-Identifier: Blank\\n\\npragma solidity 0.8.7;\\n\\nimport \\\"./PriceConverterLib.sol\\\";\\n\\nerror NotDeployer();\\n\\ncontract FundThis {\\n     // PriceConvertLib usage for uint256\\n     using PriceConverterLib for uint256;\\n\\n     // constants are better for gas efficiency\\n     uint256 public constant MIN_USD = 1 * 1e18;\\n\\n     address[] public funders;\\n     mapping(address => uint256) public addressToAmountFunded;\\n\\n     // immutables are better for gas efficiency\\n     address immutable i_deployer;\\n\\n     AggregatorV3Interface public priceFeed;\\n\\n     // called when the contract is deployed\\n     constructor(address priceFeedAddress) {\\n          i_deployer = msg.sender;\\n          priceFeed = AggregatorV3Interface(priceFeedAddress);\\n     }\\n\\n     function fund() public payable {\\n          // set min funding value with require keyword\\n          // if require condition is not met, the ops before are undone and gas remaining is sent back\\n          // msg.value : how much money is added to be sent\\n          require(\\n               msg.value.getConverted(priceFeed) >= MIN_USD,\\n               \\\"min $1 is needed\\\"\\n          ); // 1e18 = 1 * 10 * 10**18 wei = 1 ETH\\n          funders.push(msg.sender);\\n          addressToAmountFunded[msg.sender] += msg.value;\\n     }\\n\\n     function withdraw() public onlyDeployer {\\n          // withdraw the funds (msg.sender should be casted to payable)\\n          // 1. Method: Transfer (max 2300 gas; if fails reverts the transaction)\\n          // payable(msg.sender).transfer(address(this).balance);\\n          // 2. Method: Send (max 2300 gas; if fails returns a bool)\\n          // bool sendingSuccess = payable(msg.sender).send(address(this).balance);\\n          // require(sendingSuccess, \\\"Sending failed\\\");\\n          // 3. Method: Call (forward all gas or set gas, returns bool) (recommended)\\n          (bool callSuccess /* bytes memory dataReturned */, ) = payable(\\n               msg.sender\\n          ).call{value: address(this).balance}(\\\"\\\");\\n          require(callSuccess, \\\"Sending failed\\\");\\n\\n          // reset the amounts funded\\n          for (\\n               uint256 funderIndex = 0;\\n               funderIndex < funders.length;\\n               funderIndex++\\n          ) {\\n               addressToAmountFunded[funders[funderIndex]] = 0;\\n          }\\n\\n          // reset the funders array\\n          funders = new address[](0);\\n     }\\n\\n     modifier onlyDeployer() {\\n          // require(msg.sender == i_deployer, \\\"Sender must be contract deployer.\\\");\\n          // gas efficient way for errors\\n          if (msg.sender != i_deployer) revert NotDeployer();\\n          _;\\n     }\\n\\n     receive() external payable {\\n          fund();\\n     }\\n\\n     fallback() external payable {\\n          fund();\\n     }\\n}\\n\",\"keccak256\":\"0xfb9e6be7265f8ed406d4650b514d3cf8ef5350afc5fe8ebbe34375c5f7dc0eff\",\"license\":\"Blank\"},\"contracts/PriceConverterLib.sol\":{\"content\":\"// Price Converter Library\\n// Libraries cannot have any state vars nor cannot send ETH\\n\\n// SPDX-License-Identifier: Blank\\n\\npragma solidity 0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverterLib {\\n     function getPrice(\\n          AggregatorV3Interface priceFeed\\n     ) internal view returns (uint256) {\\n          // abi\\n          // a contract address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e  (eth / usd goerli testnet)\\n          (, int256 price, , , ) = priceFeed.latestRoundData();\\n          // ETH in usd (8 decimal places, should be 18 dec places as ETH and should be uint256 as ETH)\\n          return uint256(price) * 1e10;\\n     }\\n\\n     function getConverted(\\n          uint256 ethAmount,\\n          AggregatorV3Interface priceFeed\\n     ) internal view returns (uint256) {\\n          // ETH in USD\\n          uint256 ethAmountInUsd = (getPrice(priceFeed) * ethAmount) / 1e18;\\n          return ethAmountInUsd;\\n     }\\n}\\n\",\"keccak256\":\"0x5fb2bb81bed141038b048bdec25dec6bf13b13b74df9d750a8a46fda7fcdee92\",\"license\":\"Blank\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e35380380610e35833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610cd761015e60003960006102ab0152610cd76000f3fe6080604052600436106100595760003560e01c8063213dbea2146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063741bef1a146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b604051610094919061093c565b60405180910390f35b3480156100a957600080fd5b506100b26102a9565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610746565b6104e3565b6040516100e8919061093c565b60405180910390f35b3480156100fd57600080fd5b506101066104fb565b60405161011391906108e1565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610773565b610521565b60405161015a91906108c6565b60405180910390f35b670de0b6b3a76400006101a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056090919063ffffffff16565b10156101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d99061091c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102949190610973565b92505081905550565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f8b906c9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1647604051610354906108b1565b60006040518083038185875af1925050503d8060008114610391576040519150601f19603f3d011682016040523d82523d6000602084013e610396565b606091505b50509050806103da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d1906108fc565b60405180910390fd5b60005b60008054905081101561047f5760006001600080848154811061040357610402610b8d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061047790610ae6565b9150506103dd565b50600067ffffffffffffffff81111561049b5761049a610bbc565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df929190610636565b5050565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061053157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080670de0b6b3a76400008461057685610596565b61058091906109fa565b61058a91906109c9565b90508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061791906107a0565b5050509150506402540be4008161062e91906109fa565b915050919050565b8280548282559060005260206000209081019282156106af579160200282015b828111156106ae5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610656565b5b5090506106bc91906106c0565b5090565b5b808211156106d95760008160009055506001016106c1565b5090565b6000813590506106ec81610c45565b92915050565b60008151905061070181610c5c565b92915050565b60008135905061071681610c73565b92915050565b60008151905061072b81610c73565b92915050565b60008151905061074081610c8a565b92915050565b60006020828403121561075c5761075b610beb565b5b600061076a848285016106dd565b91505092915050565b60006020828403121561078957610788610beb565b5b600061079784828501610707565b91505092915050565b600080600080600060a086880312156107bc576107bb610beb565b5b60006107ca88828901610731565b95505060206107db888289016106f2565b94505060406107ec8882890161071c565b93505060606107fd8882890161071c565b925050608061080e88828901610731565b9150509295509295909350565b61082481610a54565b82525050565b61083381610ab0565b82525050565b6000610846600e83610962565b915061085182610bf0565b602082019050919050565b6000610869601083610962565b915061087482610c19565b602082019050919050565b600061088c600083610957565b915061089782610c42565b600082019050919050565b6108ab81610a90565b82525050565b60006108bc8261087f565b9150819050919050565b60006020820190506108db600083018461081b565b92915050565b60006020820190506108f6600083018461082a565b92915050565b6000602082019050818103600083015261091581610839565b9050919050565b600060208201905081810360008301526109358161085c565b9050919050565b600060208201905061095160008301846108a2565b92915050565b600081905092915050565b600082825260208201905092915050565b600061097e82610a90565b915061098983610a90565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109be576109bd610b2f565b5b828201905092915050565b60006109d482610a90565b91506109df83610a90565b9250826109ef576109ee610b5e565b5b828204905092915050565b6000610a0582610a90565b9150610a1083610a90565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a4957610a48610b2f565b5b828202905092915050565b6000610a5f82610a70565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610abb82610ac2565b9050919050565b6000610acd82610ad4565b9050919050565b6000610adf82610a70565b9050919050565b6000610af182610a90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b2457610b23610b2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e64696e67206661696c6564000000000000000000000000000000000000600082015250565b7f6d696e202431206973206e656564656400000000000000000000000000000000600082015250565b50565b610c4e81610a54565b8114610c5957600080fd5b50565b610c6581610a66565b8114610c7057600080fd5b50565b610c7c81610a90565b8114610c8757600080fd5b50565b610c9381610a9a565b8114610c9e57600080fd5b5056fea264697066735822122029c542664b2b9aef30e95aeb4cd3512adba974fac8eafbe4dc607892194c1d3964736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c8063213dbea2146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063741bef1a146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b604051610094919061093c565b60405180910390f35b3480156100a957600080fd5b506100b26102a9565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610746565b6104e3565b6040516100e8919061093c565b60405180910390f35b3480156100fd57600080fd5b506101066104fb565b60405161011391906108e1565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610773565b610521565b60405161015a91906108c6565b60405180910390f35b670de0b6b3a76400006101a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056090919063ffffffff16565b10156101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d99061091c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102949190610973565b92505081905550565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f8b906c9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1647604051610354906108b1565b60006040518083038185875af1925050503d8060008114610391576040519150601f19603f3d011682016040523d82523d6000602084013e610396565b606091505b50509050806103da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d1906108fc565b60405180910390fd5b60005b60008054905081101561047f5760006001600080848154811061040357610402610b8d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061047790610ae6565b9150506103dd565b50600067ffffffffffffffff81111561049b5761049a610bbc565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df929190610636565b5050565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061053157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080670de0b6b3a76400008461057685610596565b61058091906109fa565b61058a91906109c9565b90508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061791906107a0565b5050509150506402540be4008161062e91906109fa565b915050919050565b8280548282559060005260206000209081019282156106af579160200282015b828111156106ae5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610656565b5b5090506106bc91906106c0565b5090565b5b808211156106d95760008160009055506001016106c1565b5090565b6000813590506106ec81610c45565b92915050565b60008151905061070181610c5c565b92915050565b60008135905061071681610c73565b92915050565b60008151905061072b81610c73565b92915050565b60008151905061074081610c8a565b92915050565b60006020828403121561075c5761075b610beb565b5b600061076a848285016106dd565b91505092915050565b60006020828403121561078957610788610beb565b5b600061079784828501610707565b91505092915050565b600080600080600060a086880312156107bc576107bb610beb565b5b60006107ca88828901610731565b95505060206107db888289016106f2565b94505060406107ec8882890161071c565b93505060606107fd8882890161071c565b925050608061080e88828901610731565b9150509295509295909350565b61082481610a54565b82525050565b61083381610ab0565b82525050565b6000610846600e83610962565b915061085182610bf0565b602082019050919050565b6000610869601083610962565b915061087482610c19565b602082019050919050565b600061088c600083610957565b915061089782610c42565b600082019050919050565b6108ab81610a90565b82525050565b60006108bc8261087f565b9150819050919050565b60006020820190506108db600083018461081b565b92915050565b60006020820190506108f6600083018461082a565b92915050565b6000602082019050818103600083015261091581610839565b9050919050565b600060208201905081810360008301526109358161085c565b9050919050565b600060208201905061095160008301846108a2565b92915050565b600081905092915050565b600082825260208201905092915050565b600061097e82610a90565b915061098983610a90565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109be576109bd610b2f565b5b828201905092915050565b60006109d482610a90565b91506109df83610a90565b9250826109ef576109ee610b5e565b5b828204905092915050565b6000610a0582610a90565b9150610a1083610a90565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a4957610a48610b2f565b5b828202905092915050565b6000610a5f82610a70565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610abb82610ac2565b9050919050565b6000610acd82610ad4565b9050919050565b6000610adf82610a70565b9050919050565b6000610af182610a90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b2457610b23610b2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e64696e67206661696c6564000000000000000000000000000000000000600082015250565b7f6d696e202431206973206e656564656400000000000000000000000000000000600082015250565b50565b610c4e81610a54565b8114610c5957600080fd5b50565b610c6581610a66565b8114610c7057600080fd5b50565b610c7c81610a90565b8114610c8757600080fd5b50565b610c9381610a9a565b8114610c9e57600080fd5b5056fea264697066735822122029c542664b2b9aef30e95aeb4cd3512adba974fac8eafbe4dc607892194c1d3964736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundThis.sol:FundThis",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundThis.sol:FundThis",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundThis.sol:FundThis",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}