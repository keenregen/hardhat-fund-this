{
  "address": "0x80d3FFE972946924D964CaD2bbA7e5Ea4887ff83",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundThis__NotDeployer",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasEfficWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funderAddress",
          "type": "address"
        }
      ],
      "name": "getAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x91cd5bf7e017a76c6608261681aa884cbb98ebb0c6ae3a6ec47a002cc43b0591",
  "receipt": {
    "to": null,
    "from": "0xDDF371f4d396dfeF95d340d7cac88eFf5D55e713",
    "contractAddress": "0x80d3FFE972946924D964CaD2bbA7e5Ea4887ff83",
    "transactionIndex": 75,
    "gasUsed": "932294",
    "logsBloom": "0x
    "blockHash": "0xbc9371e302ec978058eea0b5031b9f53fd32a8acf02768ad0d62d63e2e947836",
    "transactionHash": "0x91cd5bf7e017a76c6608261681aa884cbb98ebb0c6ae3a6ec47a002cc43b0591",
    "logs": [],
    "blockNumber": 8452374,
    "cumulativeGasUsed": "11013822",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "27ca9daf9cb4afba318e1a5a0f1bcc8f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundThis__NotDeployer\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasEfficWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"keenregen_study\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"Price feeds are implemented as library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Price feeds are implemented as library\"}},\"title\":\"A Contract For Funding The Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"function to fund this contract\"}},\"notice\":\"A simple funding contract for study purposes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundThis.sol\":\"FundThis\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundThis.sol\":{\"content\":\"// SPDX-License-Identifier: Blank\\n\\n// pragma\\npragma solidity 0.8.7;\\n\\n//imports\\nimport \\\"./PriceConverterLib.sol\\\";\\n\\n// error codes\\nerror FundThis__NotDeployer();\\n\\n// get funds from blch users\\n// set a min funding value in usd\\n// keep funder addresses and fund amounts\\n// withdraw funds\\n\\n// v3 with gas efficiency techniques, receive and fallback additions\\n\\n// Interfaces\\n\\n// Libraries\\n\\n// Contracts\\n/// @title A Contract For Funding The Contract\\n/// @author keenregen_study\\n/// @notice A simple funding contract for study purposes\\n/// @dev Price feeds are implemented as library\\n/// @custom:experimental This is an experimental contract.\\ncontract FundThis {\\n     // Type Declerations\\n     // PriceConvertLib usage for uint256\\n     using PriceConverterLib for uint256;\\n\\n     // State Vars\\n     // constants, privates and intertnals are better for gas efficiency\\n     uint256 public constant MIN_USD = 1 * 1e18;\\n\\n     address[] private s_funders;\\n     mapping(address => uint256) private s_addressToAmountFunded;\\n\\n     // immutables are better for gas efficiency\\n     address private immutable i_deployer;\\n\\n     AggregatorV3Interface private s_priceFeed;\\n\\n     modifier onlyDeployer() {\\n          // require(msg.sender == i_deployer, \\\"Sender must be contract deployer.\\\");\\n          // gas efficient way for errors\\n          if (msg.sender != i_deployer) revert FundThis__NotDeployer();\\n          _;\\n     }\\n\\n     // Functions (const, rec, fallback, external, public, internal, private, view/pure)\\n\\n     // called when the contract is deployed\\n     constructor(address priceFeedAddress) {\\n          i_deployer = msg.sender;\\n          s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n     }\\n\\n     receive() external payable {\\n          fund();\\n     }\\n\\n     fallback() external payable {\\n          fund();\\n     }\\n\\n     /// @notice function to fund this contract\\n     /// @dev Price feeds are implemented as library\\n     function fund() public payable {\\n          // set min funding value with require keyword\\n          // if require condition is not met, the ops before are undone and gas remaining is sent back\\n          // msg.value : how much money is added to be sent\\n          require(\\n               msg.value.getConverted(s_priceFeed) >= MIN_USD,\\n               \\\"min $1 is needed\\\"\\n          ); // 1e18 = 1 * 10 * 10**18 wei = 1 ETH\\n          s_funders.push(msg.sender);\\n          s_addressToAmountFunded[msg.sender] += msg.value;\\n     }\\n\\n     function withdraw() public payable onlyDeployer {\\n          // withdraw the funds (msg.sender should be casted to payable)\\n          // 1. Method: Transfer (max 2300 gas; if fails reverts the transaction)\\n          // payable(msg.sender).transfer(address(this).balance);\\n          // 2. Method: Send (max 2300 gas; if fails returns a bool)\\n          // bool sendingSuccess = payable(msg.sender).send(address(this).balance);\\n          // require(sendingSuccess, \\\"Sending failed\\\");\\n          // 3. Method: Call (forward all gas or set gas, returns bool) (recommended)\\n          (bool callSuccess /* bytes memory dataReturned */, ) = payable(\\n               msg.sender\\n          ).call{value: address(this).balance}(\\\"\\\");\\n          require(callSuccess, \\\"Sending failed\\\");\\n\\n          // reset the amounts funded\\n          for (\\n               uint256 funderIndex = 0;\\n               funderIndex < s_funders.length;\\n               funderIndex++\\n          ) {\\n               s_addressToAmountFunded[s_funders[funderIndex]] = 0;\\n          }\\n\\n          // reset the funders array\\n          s_funders = new address[](0);\\n     }\\n\\n     function gasEfficWithdraw() public payable onlyDeployer {\\n          address[] memory funders = s_funders;\\n          // mapping cannot be in memory\\n          for (\\n               uint256 funderIndex = 0;\\n               funderIndex < funders.length;\\n               funderIndex++\\n          ) {\\n               s_addressToAmountFunded[funders[funderIndex]] = 0;\\n          }\\n          // reset the funders array\\n          s_funders = new address[](0);\\n     }\\n\\n     function getDeployer() public view returns (address) {\\n          return i_deployer;\\n     }\\n\\n     function getFunder(uint256 index) public view returns (address) {\\n          return s_funders[index];\\n     }\\n\\n     function getAmountFunded(\\n          address funderAddress\\n     ) public view returns (uint256) {\\n          return s_addressToAmountFunded[funderAddress];\\n     }\\n\\n     function getPriceFeed() public view returns (AggregatorV3Interface) {\\n          return s_priceFeed;\\n     }\\n}\\n\",\"keccak256\":\"0xfd758cb8d2bda3569df70472240091ed3ac362fbd824c343af62371dfae856b4\",\"license\":\"Blank\"},\"contracts/PriceConverterLib.sol\":{\"content\":\"// Price Converter Library\\n// Libraries cannot have any state vars nor cannot send ETH\\n\\n// SPDX-License-Identifier: Blank\\n\\npragma solidity 0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverterLib {\\n     function getPrice(\\n          AggregatorV3Interface priceFeed\\n     ) internal view returns (uint256) {\\n          // abi\\n          // a contract address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e  (eth / usd goerli testnet)\\n          (, int256 price, , , ) = priceFeed.latestRoundData();\\n          // ETH in usd (8 decimal places, should be 18 dec places as ETH and should be uint256 as ETH)\\n          return uint256(price) * 1e10;\\n     }\\n\\n     function getConverted(\\n          uint256 ethAmount,\\n          AggregatorV3Interface priceFeed\\n     ) internal view returns (uint256) {\\n          // ETH in USD\\n          uint256 ethAmountInUsd = (getPrice(priceFeed) * ethAmount) / 1e18;\\n          return ethAmountInUsd;\\n     }\\n}\\n\",\"keccak256\":\"0x5fb2bb81bed141038b048bdec25dec6bf13b13b74df9d750a8a46fda7fcdee92\",\"license\":\"Blank\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010fa380380620010fa8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c610f7b6200017f600039600081816102ed015281816104ea01526107260152610f7b6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610102578063a48b45551461012d578063b60d42881461016a578063d7b4750c146101745761008e565b8063031c636c14610098578063213dbea2146100a25780633ccfd60b146100cd57806372630531146100d75761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102eb565b005b3480156100ae57600080fd5b506100b76104dc565b6040516100c49190610be0565b60405180910390f35b6100d56104e8565b005b3480156100e357600080fd5b506100ec610722565b6040516100f99190610b6a565b60405180910390f35b34801561010e57600080fd5b5061011761074a565b6040516101249190610b85565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f91906109ea565b610774565b6040516101619190610be0565b60405180910390f35b6101726101b1565b005b34801561018057600080fd5b5061019b60048036038101906101969190610a17565b6107bd565b6040516101a89190610b6a565b60405180910390f35b670de0b6b3a76400006101ef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461080490919063ffffffff16565b1015610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610bc0565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e29190610c17565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610370576040517fa60af03700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103f357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103a9575b5050505050905060005b81518110156104785760006001600084848151811061041f5761041e610e31565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061047090610d8a565b9150506103fd565b50600067ffffffffffffffff81111561049457610493610e60565b5b6040519080825280602002602001820160405280156104c25781602001602082028036833780820191505090505b50600090805190602001906104d89291906108da565b5050565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056d576040517fa60af03700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161059390610b55565b60006040518083038185875af1925050503d80600081146105d0576040519150601f19603f3d011682016040523d82523d6000602084013e6105d5565b606091505b5050905080610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090610ba0565b60405180910390fd5b60005b6000805490508110156106be5760006001600080848154811061064257610641610e31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806106b690610d8a565b91505061061c565b50600067ffffffffffffffff8111156106da576106d9610e60565b5b6040519080825280602002602001820160405280156107085781602001602082028036833780820191505090505b506000908051906020019061071e9291906108da565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106107d2576107d1610e31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080670de0b6b3a76400008461081a8561083a565b6108249190610c9e565b61082e9190610c6d565b90508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bb9190610a44565b5050509150506402540be400816108d29190610c9e565b915050919050565b828054828255906000526020600020908101928215610953579160200282015b828111156109525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108fa565b5b5090506109609190610964565b5090565b5b8082111561097d576000816000905550600101610965565b5090565b60008135905061099081610ee9565b92915050565b6000815190506109a581610f00565b92915050565b6000813590506109ba81610f17565b92915050565b6000815190506109cf81610f17565b92915050565b6000815190506109e481610f2e565b92915050565b600060208284031215610a00576109ff610e8f565b5b6000610a0e84828501610981565b91505092915050565b600060208284031215610a2d57610a2c610e8f565b5b6000610a3b848285016109ab565b91505092915050565b600080600080600060a08688031215610a6057610a5f610e8f565b5b6000610a6e888289016109d5565b9550506020610a7f88828901610996565b9450506040610a90888289016109c0565b9350506060610aa1888289016109c0565b9250506080610ab2888289016109d5565b9150509295509295909350565b610ac881610cf8565b82525050565b610ad781610d54565b82525050565b6000610aea600e83610c06565b9150610af582610e94565b602082019050919050565b6000610b0d601083610c06565b9150610b1882610ebd565b602082019050919050565b6000610b30600083610bfb565b9150610b3b82610ee6565b600082019050919050565b610b4f81610d34565b82525050565b6000610b6082610b23565b9150819050919050565b6000602082019050610b7f6000830184610abf565b92915050565b6000602082019050610b9a6000830184610ace565b92915050565b60006020820190508181036000830152610bb981610add565b9050919050565b60006020820190508181036000830152610bd981610b00565b9050919050565b6000602082019050610bf56000830184610b46565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610c2282610d34565b9150610c2d83610d34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c6257610c61610dd3565b5b828201905092915050565b6000610c7882610d34565b9150610c8383610d34565b925082610c9357610c92610e02565b5b828204905092915050565b6000610ca982610d34565b9150610cb483610d34565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ced57610cec610dd3565b5b828202905092915050565b6000610d0382610d14565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d5f82610d66565b9050919050565b6000610d7182610d78565b9050919050565b6000610d8382610d14565b9050919050565b6000610d9582610d34565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc857610dc7610dd3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e64696e67206661696c6564000000000000000000000000000000000000600082015250565b7f6d696e202431206973206e656564656400000000000000000000000000000000600082015250565b50565b610ef281610cf8565b8114610efd57600080fd5b50565b610f0981610d0a565b8114610f1457600080fd5b50565b610f2081610d34565b8114610f2b57600080fd5b50565b610f3781610d3e565b8114610f4257600080fd5b5056fea26469706673582212200c1bfa678edbdec43f3d3b828909d05012c077976422344191f323e7dabccaa964736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610102578063a48b45551461012d578063b60d42881461016a578063d7b4750c146101745761008e565b8063031c636c14610098578063213dbea2146100a25780633ccfd60b146100cd57806372630531146100d75761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102eb565b005b3480156100ae57600080fd5b506100b76104dc565b6040516100c49190610be0565b60405180910390f35b6100d56104e8565b005b3480156100e357600080fd5b506100ec610722565b6040516100f99190610b6a565b60405180910390f35b34801561010e57600080fd5b5061011761074a565b6040516101249190610b85565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f91906109ea565b610774565b6040516101619190610be0565b60405180910390f35b6101726101b1565b005b34801561018057600080fd5b5061019b60048036038101906101969190610a17565b6107bd565b6040516101a89190610b6a565b60405180910390f35b670de0b6b3a76400006101ef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461080490919063ffffffff16565b1015610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610bc0565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e29190610c17565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610370576040517fa60af03700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103f357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103a9575b5050505050905060005b81518110156104785760006001600084848151811061041f5761041e610e31565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061047090610d8a565b9150506103fd565b50600067ffffffffffffffff81111561049457610493610e60565b5b6040519080825280602002602001820160405280156104c25781602001602082028036833780820191505090505b50600090805190602001906104d89291906108da565b5050565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056d576040517fa60af03700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161059390610b55565b60006040518083038185875af1925050503d80600081146105d0576040519150601f19603f3d011682016040523d82523d6000602084013e6105d5565b606091505b5050905080610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090610ba0565b60405180910390fd5b60005b6000805490508110156106be5760006001600080848154811061064257610641610e31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806106b690610d8a565b91505061061c565b50600067ffffffffffffffff8111156106da576106d9610e60565b5b6040519080825280602002602001820160405280156107085781602001602082028036833780820191505090505b506000908051906020019061071e9291906108da565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106107d2576107d1610e31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080670de0b6b3a76400008461081a8561083a565b6108249190610c9e565b61082e9190610c6d565b90508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bb9190610a44565b5050509150506402540be400816108d29190610c9e565b915050919050565b828054828255906000526020600020908101928215610953579160200282015b828111156109525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108fa565b5b5090506109609190610964565b5090565b5b8082111561097d576000816000905550600101610965565b5090565b60008135905061099081610ee9565b92915050565b6000815190506109a581610f00565b92915050565b6000813590506109ba81610f17565b92915050565b6000815190506109cf81610f17565b92915050565b6000815190506109e481610f2e565b92915050565b600060208284031215610a00576109ff610e8f565b5b6000610a0e84828501610981565b91505092915050565b600060208284031215610a2d57610a2c610e8f565b5b6000610a3b848285016109ab565b91505092915050565b600080600080600060a08688031215610a6057610a5f610e8f565b5b6000610a6e888289016109d5565b9550506020610a7f88828901610996565b9450506040610a90888289016109c0565b9350506060610aa1888289016109c0565b9250506080610ab2888289016109d5565b9150509295509295909350565b610ac881610cf8565b82525050565b610ad781610d54565b82525050565b6000610aea600e83610c06565b9150610af582610e94565b602082019050919050565b6000610b0d601083610c06565b9150610b1882610ebd565b602082019050919050565b6000610b30600083610bfb565b9150610b3b82610ee6565b600082019050919050565b610b4f81610d34565b82525050565b6000610b6082610b23565b9150819050919050565b6000602082019050610b7f6000830184610abf565b92915050565b6000602082019050610b9a6000830184610ace565b92915050565b60006020820190508181036000830152610bb981610add565b9050919050565b60006020820190508181036000830152610bd981610b00565b9050919050565b6000602082019050610bf56000830184610b46565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610c2282610d34565b9150610c2d83610d34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c6257610c61610dd3565b5b828201905092915050565b6000610c7882610d34565b9150610c8383610d34565b925082610c9357610c92610e02565b5b828204905092915050565b6000610ca982610d34565b9150610cb483610d34565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ced57610cec610dd3565b5b828202905092915050565b6000610d0382610d14565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d5f82610d66565b9050919050565b6000610d7182610d78565b9050919050565b6000610d8382610d14565b9050919050565b6000610d9582610d34565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc857610dc7610dd3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e64696e67206661696c6564000000000000000000000000000000000000600082015250565b7f6d696e202431206973206e656564656400000000000000000000000000000000600082015250565b50565b610ef281610cf8565b8114610efd57600080fd5b50565b610f0981610d0a565b8114610f1457600080fd5b50565b610f2081610d34565b8114610f2b57600080fd5b50565b610f3781610d3e565b8114610f4257600080fd5b5056fea26469706673582212200c1bfa678edbdec43f3d3b828909d05012c077976422344191f323e7dabccaa964736f6c63430008070033",
  "devdoc": {
    "author": "keenregen_study",
    "custom:experimental": "This is an experimental contract.",
    "details": "Price feeds are implemented as library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "Price feeds are implemented as library"
      }
    },
    "title": "A Contract For Funding The Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "function to fund this contract"
      }
    },
    "notice": "A simple funding contract for study purposes",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundThis.sol:FundThis",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundThis.sol:FundThis",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundThis.sol:FundThis",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}